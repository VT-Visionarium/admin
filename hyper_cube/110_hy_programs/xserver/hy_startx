#!/bin/bash

set -ex

magic_arg=--hy_start_X11_ZXXx

if [ "$1" = "$magic_arg" ] ; then
    # This runs in the new X display
    export DISPLAY=:0.0
    # If you change this we'll need to edit hy_commonx
    # so it know what to kill.
    exec xclock -geometry 1000x1000+0+0
    #xfce4-terminal --geometry=173x49+0+0 &
    #exec wm2
fi


set -exo pipefail

prog="$(basename $0)"

scriptdir="$(dirname $(readlink -f ${BASH_SOURCE[0]}))"
# killfile must be the same path as in hy_startx
source "$scriptdir"/hy_commonx
unset scriptdir




xinitrc="${BASH_SOURCE[0]}"


##################################################
#          CONFIGURE resolution
##################################################
# These xorg.conf files need to be installed in
# /etc/X11/ then we can select which resolution
# we want to run with

config="xorg.conf.hy_2560x1600"
#config="xorg.conf.hy_1920x1200"

##################################################


trap catcher SIGINT SIGTERM SIGQUIT


function usage()
{
    cat <<EOF

  Usage: $prog [-h|--help]

  Runs X11 server display server for the Virginia Tech HyperCube.

  
                      OPTIONS

     -h|--help  print this help and exit

EOF
    exit 1
}

[ -n "$1" ] && usage


function start()
{
    if [ -e "$killfile" ] ; then
        set +x
        echo "Cannot run X Server yet, waiting for an X Server to stop."
        echo "DIE YOU RAT" >> $killfile
        sleep 1
        set -x
        rm -f $killfile
        killall wm2
        if [ -e "$killfile" ] ; then
            set +x
            echo "Failed to remove $killfile"
            exit 1
        fi
    fi

    # make a new and empty kill file any logged in user should be able to
    # remove this file.
    mkfifo -m 666 $killfile

    xinit "$xinitrc" $magic_arg -- -config $config &

    # This should block until something writes $killfile
    # See hy_stopx.
    #
    set +x
    echo "blockin on reading $killfile"
    set -x
    # This read call will block until something
    # writes to the killfile
    read line < $killfile
    set +x
    echo "read \"$line\" from: $killfile"

    # Calling the signal catcher will try to stop the X11 server and exit.
    catcher
 }

set -x

# We run this function in the background and then return.
#
start &

# We add a sleep so that maybe the prompt is not pushed away by the X11
# server spew.
sleep 10
